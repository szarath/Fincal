//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fincal.Dataservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Dataservice.IDatamanagement")]
    public interface IDatamanagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getspecificissflag", ReplyAction="http://tempuri.org/IDatamanagement/getspecificissflagResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getspecificissflag(string isfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getspecificissflag", ReplyAction="http://tempuri.org/IDatamanagement/getspecificissflagResponse")]
        System.Threading.Tasks.Task<object[]> getspecificissflagAsync(string isfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissflagproj", ReplyAction="http://tempuri.org/IDatamanagement/deleteissflagprojResponse")]
        int deleteissflagproj(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissflagproj", ReplyAction="http://tempuri.org/IDatamanagement/deleteissflagprojResponse")]
        System.Threading.Tasks.Task<int> deleteissflagprojAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserttask", ReplyAction="http://tempuri.org/IDatamanagement/inserttaskResponse")]
        int inserttask(string name, string complete, string category, string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserttask", ReplyAction="http://tempuri.org/IDatamanagement/inserttaskResponse")]
        System.Threading.Tasks.Task<int> inserttaskAsync(string name, string complete, string category, string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletetask", ReplyAction="http://tempuri.org/IDatamanagement/deletetaskResponse")]
        int deletetask(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletetask", ReplyAction="http://tempuri.org/IDatamanagement/deletetaskResponse")]
        System.Threading.Tasks.Task<int> deletetaskAsync(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskcat", ReplyAction="http://tempuri.org/IDatamanagement/gettaskcatResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettaskcat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskcat", ReplyAction="http://tempuri.org/IDatamanagement/gettaskcatResponse")]
        System.Threading.Tasks.Task<object[]> gettaskcatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettask", ReplyAction="http://tempuri.org/IDatamanagement/gettaskResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettask(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettask", ReplyAction="http://tempuri.org/IDatamanagement/gettaskResponse")]
        System.Threading.Tasks.Task<object[]> gettaskAsync(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatetask", ReplyAction="http://tempuri.org/IDatamanagement/updatetaskResponse")]
        int updatetask(string name, string complete, string uid, string tcid, string googleid, string taskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatetask", ReplyAction="http://tempuri.org/IDatamanagement/updatetaskResponse")]
        System.Threading.Tasks.Task<int> updatetaskAsync(string name, string complete, string uid, string tcid, string googleid, string taskid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checktasks", ReplyAction="http://tempuri.org/IDatamanagement/checktasksResponse")]
        string checktasks(string ID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checktasks", ReplyAction="http://tempuri.org/IDatamanagement/checktasksResponse")]
        System.Threading.Tasks.Task<string> checktasksAsync(string ID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskids", ReplyAction="http://tempuri.org/IDatamanagement/gettaskidsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettaskids(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskids", ReplyAction="http://tempuri.org/IDatamanagement/gettaskidsResponse")]
        System.Threading.Tasks.Task<object[]> gettaskidsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertevent", ReplyAction="http://tempuri.org/IDatamanagement/inserteventResponse")]
        int insertevent(System.DateTime edate, string summary, string location, string googleid, string uid, string desc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertevent", ReplyAction="http://tempuri.org/IDatamanagement/inserteventResponse")]
        System.Threading.Tasks.Task<int> inserteventAsync(System.DateTime edate, string summary, string location, string googleid, string uid, string desc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateevent", ReplyAction="http://tempuri.org/IDatamanagement/updateeventResponse")]
        int updateevent(System.DateTime edate, string summary, string location, string desc, string googleid, string eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateevent", ReplyAction="http://tempuri.org/IDatamanagement/updateeventResponse")]
        System.Threading.Tasks.Task<int> updateeventAsync(System.DateTime edate, string summary, string location, string desc, string googleid, string eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checkevents", ReplyAction="http://tempuri.org/IDatamanagement/checkeventsResponse")]
        string checkevents(string ID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checkevents", ReplyAction="http://tempuri.org/IDatamanagement/checkeventsResponse")]
        System.Threading.Tasks.Task<string> checkeventsAsync(string ID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteevent", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventResponse")]
        int deleteevent(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteevent", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventResponse")]
        System.Threading.Tasks.Task<int> deleteeventAsync(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getevent", ReplyAction="http://tempuri.org/IDatamanagement/geteventResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getevent(string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getevent", ReplyAction="http://tempuri.org/IDatamanagement/geteventResponse")]
        System.Threading.Tasks.Task<object[]> geteventAsync(string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteeventpics", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventpicsResponse")]
        int deleteeventpics(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteeventpics", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventpicsResponse")]
        System.Threading.Tasks.Task<int> deleteeventpicsAsync(string GoogleID, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventids", ReplyAction="http://tempuri.org/IDatamanagement/geteventidsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] geteventids(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventids", ReplyAction="http://tempuri.org/IDatamanagement/geteventidsResponse")]
        System.Threading.Tasks.Task<object[]> geteventidsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserevents", ReplyAction="http://tempuri.org/IDatamanagement/getallusereventsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getalluserevents(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserevents", ReplyAction="http://tempuri.org/IDatamanagement/getallusereventsResponse")]
        System.Threading.Tasks.Task<object[][]> getallusereventsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserteventpic", ReplyAction="http://tempuri.org/IDatamanagement/inserteventpicResponse")]
        int inserteventpic(string eid, string pic, string egoogleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserteventpic", ReplyAction="http://tempuri.org/IDatamanagement/inserteventpicResponse")]
        System.Threading.Tasks.Task<int> inserteventpicAsync(string eid, string pic, string egoogleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventpicsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] geteventpics(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventpicsResponse")]
        System.Threading.Tasks.Task<object[]> geteventpicsAsync(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventfirstpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventfirstpicsResponse")]
        string geteventfirstpics(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventfirstpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventfirstpicsResponse")]
        System.Threading.Tasks.Task<string> geteventfirstpicsAsync(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertpicture", ReplyAction="http://tempuri.org/IDatamanagement/insertpictureResponse")]
        int insertpicture(string picture, string title, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertpicture", ReplyAction="http://tempuri.org/IDatamanagement/insertpictureResponse")]
        System.Threading.Tasks.Task<int> insertpictureAsync(string picture, string title, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletepicture", ReplyAction="http://tempuri.org/IDatamanagement/deletepictureResponse")]
        int deletepicture(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletepicture", ReplyAction="http://tempuri.org/IDatamanagement/deletepictureResponse")]
        System.Threading.Tasks.Task<int> deletepictureAsync(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallpictures", ReplyAction="http://tempuri.org/IDatamanagement/deleteallpicturesResponse")]
        int deleteallpictures(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallpictures", ReplyAction="http://tempuri.org/IDatamanagement/deleteallpicturesResponse")]
        System.Threading.Tasks.Task<int> deleteallpicturesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserpictures", ReplyAction="http://tempuri.org/IDatamanagement/getalluserpicturesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getalluserpictures(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserpictures", ReplyAction="http://tempuri.org/IDatamanagement/getalluserpicturesResponse")]
        System.Threading.Tasks.Task<object[][]> getalluserpicturesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getpic", ReplyAction="http://tempuri.org/IDatamanagement/getpicResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getpic(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getpic", ReplyAction="http://tempuri.org/IDatamanagement/getpicResponse")]
        System.Threading.Tasks.Task<object[]> getpicAsync(string id, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatepic", ReplyAction="http://tempuri.org/IDatamanagement/updatepicResponse")]
        int updatepic(string id, string title, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatepic", ReplyAction="http://tempuri.org/IDatamanagement/updatepicResponse")]
        System.Threading.Tasks.Task<int> updatepicAsync(string id, string title, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getfewpics", ReplyAction="http://tempuri.org/IDatamanagement/getfewpicsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getfewpics(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getfewpics", ReplyAction="http://tempuri.org/IDatamanagement/getfewpicsResponse")]
        System.Threading.Tasks.Task<object[][]> getfewpicsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertsechedule", ReplyAction="http://tempuri.org/IDatamanagement/insertsecheduleResponse")]
        int insertsechedule(System.DateTime starttime, System.DateTime endtime, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertsechedule", ReplyAction="http://tempuri.org/IDatamanagement/insertsecheduleResponse")]
        System.Threading.Tasks.Task<int> insertsecheduleAsync(System.DateTime starttime, System.DateTime endtime, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteschedule", ReplyAction="http://tempuri.org/IDatamanagement/deletescheduleResponse")]
        int deleteschedule(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteschedule", ReplyAction="http://tempuri.org/IDatamanagement/deletescheduleResponse")]
        System.Threading.Tasks.Task<int> deletescheduleAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateschedule", ReplyAction="http://tempuri.org/IDatamanagement/updatescheduleResponse")]
        int updateschedule(System.DateTime starttime, System.DateTime endtime, string category, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateschedule", ReplyAction="http://tempuri.org/IDatamanagement/updatescheduleResponse")]
        System.Threading.Tasks.Task<int> updatescheduleAsync(System.DateTime starttime, System.DateTime endtime, string category, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getskills", ReplyAction="http://tempuri.org/IDatamanagement/getskillsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getskills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getskills", ReplyAction="http://tempuri.org/IDatamanagement/getskillsResponse")]
        System.Threading.Tasks.Task<object[]> getskillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedprojects", ReplyAction="http://tempuri.org/IDatamanagement/getassignedprojectsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getassignedprojects(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedprojects", ReplyAction="http://tempuri.org/IDatamanagement/getassignedprojectsResponse")]
        System.Threading.Tasks.Task<object[]> getassignedprojectsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectdetails", ReplyAction="http://tempuri.org/IDatamanagement/getprojectdetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getprojectdetails(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectdetails", ReplyAction="http://tempuri.org/IDatamanagement/getprojectdetailsResponse")]
        System.Threading.Tasks.Task<object[]> getprojectdetailsAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojects", ReplyAction="http://tempuri.org/IDatamanagement/getprojectsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getprojects(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojects", ReplyAction="http://tempuri.org/IDatamanagement/getprojectsResponse")]
        System.Threading.Tasks.Task<object[][]> getprojectsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/createproject", ReplyAction="http://tempuri.org/IDatamanagement/createprojectResponse")]
        int createproject(string title, string description, string uid, System.DateTime pcredate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/createproject", ReplyAction="http://tempuri.org/IDatamanagement/createprojectResponse")]
        System.Threading.Tasks.Task<int> createprojectAsync(string title, string description, string uid, System.DateTime pcredate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateproject", ReplyAction="http://tempuri.org/IDatamanagement/updateprojectResponse")]
        int updateproject(string title, string description, string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateproject", ReplyAction="http://tempuri.org/IDatamanagement/updateprojectResponse")]
        System.Threading.Tasks.Task<int> updateprojectAsync(string title, string description, string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteproject", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojectResponse")]
        int deleteproject(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteproject", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojectResponse")]
        System.Threading.Tasks.Task<int> deleteprojectAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedprojdetials", ReplyAction="http://tempuri.org/IDatamanagement/getassignedprojdetialsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getassignedprojdetials(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedprojdetials", ReplyAction="http://tempuri.org/IDatamanagement/getassignedprojdetialsResponse")]
        System.Threading.Tasks.Task<object[][]> getassignedprojdetialsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedissues", ReplyAction="http://tempuri.org/IDatamanagement/getassignedissuesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getassignedissues(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedissues", ReplyAction="http://tempuri.org/IDatamanagement/getassignedissuesResponse")]
        System.Threading.Tasks.Task<object[]> getassignedissuesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissues", ReplyAction="http://tempuri.org/IDatamanagement/getissuesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getissues(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissues", ReplyAction="http://tempuri.org/IDatamanagement/getissuesResponse")]
        System.Threading.Tasks.Task<object[][]> getissuesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojissues", ReplyAction="http://tempuri.org/IDatamanagement/getprojissuesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getprojissues(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojissues", ReplyAction="http://tempuri.org/IDatamanagement/getprojissuesResponse")]
        System.Threading.Tasks.Task<object[][]> getprojissuesAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuedetails", ReplyAction="http://tempuri.org/IDatamanagement/getissuedetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getissuedetails(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuedetails", ReplyAction="http://tempuri.org/IDatamanagement/getissuedetailsResponse")]
        System.Threading.Tasks.Task<object[]> getissuedetailsAsync(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/createissue", ReplyAction="http://tempuri.org/IDatamanagement/createissueResponse")]
        int createissue(string title, string description, string projid, string category, string uid, System.DateTime iscredate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/createissue", ReplyAction="http://tempuri.org/IDatamanagement/createissueResponse")]
        System.Threading.Tasks.Task<int> createissueAsync(string title, string description, string projid, string category, string uid, System.DateTime iscredate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateissue", ReplyAction="http://tempuri.org/IDatamanagement/updateissueResponse")]
        int updateissue(string isid, string status, string assid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateissue", ReplyAction="http://tempuri.org/IDatamanagement/updateissueResponse")]
        System.Threading.Tasks.Task<int> updateissueAsync(string isid, string status, string assid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissue", ReplyAction="http://tempuri.org/IDatamanagement/deleteissueResponse")]
        int deleteissue(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissue", ReplyAction="http://tempuri.org/IDatamanagement/deleteissueResponse")]
        System.Threading.Tasks.Task<int> deleteissueAsync(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteprojissues", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojissuesResponse")]
        int deleteprojissues(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteprojissues", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojissuesResponse")]
        System.Threading.Tasks.Task<int> deleteprojissuesAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/issueteam", ReplyAction="http://tempuri.org/IDatamanagement/issueteamResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] issueteam(string isID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/issueteam", ReplyAction="http://tempuri.org/IDatamanagement/issueteamResponse")]
        System.Threading.Tasks.Task<object[][]> issueteamAsync(string isID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedissdetials", ReplyAction="http://tempuri.org/IDatamanagement/getassignedissdetialsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getassignedissdetials(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getassignedissdetials", ReplyAction="http://tempuri.org/IDatamanagement/getassignedissdetialsResponse")]
        System.Threading.Tasks.Task<object[][]> getassignedissdetialsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/addprojteam", ReplyAction="http://tempuri.org/IDatamanagement/addprojteamResponse")]
        int addprojteam(string uid, string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/addprojteam", ReplyAction="http://tempuri.org/IDatamanagement/addprojteamResponse")]
        System.Threading.Tasks.Task<int> addprojteamAsync(string uid, string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteprojteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojteamResponse")]
        int deleteprojteam(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteprojteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteprojteamResponse")]
        System.Threading.Tasks.Task<int> deleteprojteamAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteassiguserfromteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteassiguserfromteamResponse")]
        int deleteassiguserfromteam(string uid, string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteassiguserfromteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteassiguserfromteamResponse")]
        System.Threading.Tasks.Task<int> deleteassiguserfromteamAsync(string uid, string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectmembers", ReplyAction="http://tempuri.org/IDatamanagement/getprojectmembersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getprojectmembers(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectmembers", ReplyAction="http://tempuri.org/IDatamanagement/getprojectmembersResponse")]
        System.Threading.Tasks.Task<object[]> getprojectmembersAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/addissteam", ReplyAction="http://tempuri.org/IDatamanagement/addissteamResponse")]
        int addissteam(string uid, string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/addissteam", ReplyAction="http://tempuri.org/IDatamanagement/addissteamResponse")]
        System.Threading.Tasks.Task<int> addissteamAsync(string uid, string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteissteamResponse")]
        int deleteissteam(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissteam", ReplyAction="http://tempuri.org/IDatamanagement/deleteissteamResponse")]
        System.Threading.Tasks.Task<int> deleteissteamAsync(string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteassiguserformissue", ReplyAction="http://tempuri.org/IDatamanagement/deleteassiguserformissueResponse")]
        int deleteassiguserformissue(string uid, string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteassiguserformissue", ReplyAction="http://tempuri.org/IDatamanagement/deleteassiguserformissueResponse")]
        System.Threading.Tasks.Task<int> deleteassiguserformissueAsync(string uid, string issueid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuemembers", ReplyAction="http://tempuri.org/IDatamanagement/getissuemembersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getissuemembers(string issid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuemembers", ReplyAction="http://tempuri.org/IDatamanagement/getissuemembersResponse")]
        System.Threading.Tasks.Task<object[]> getissuemembersAsync(string issid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojnotification", ReplyAction="http://tempuri.org/IDatamanagement/getprojnotificationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getprojnotification(string projectnotificationuserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojnotification", ReplyAction="http://tempuri.org/IDatamanagement/getprojnotificationResponse")]
        System.Threading.Tasks.Task<object[][]> getprojnotificationAsync(string projectnotificationuserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertprojectnotifications", ReplyAction="http://tempuri.org/IDatamanagement/insertprojectnotificationsResponse")]
        int insertprojectnotifications(string porjid, string uid, System.DateTime credate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertprojectnotifications", ReplyAction="http://tempuri.org/IDatamanagement/insertprojectnotificationsResponse")]
        System.Threading.Tasks.Task<int> insertprojectnotificationsAsync(string porjid, string uid, System.DateTime credate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteporjnotificaiton", ReplyAction="http://tempuri.org/IDatamanagement/deleteporjnotificaitonResponse")]
        int deleteporjnotificaiton(string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteporjnotificaiton", ReplyAction="http://tempuri.org/IDatamanagement/deleteporjnotificaitonResponse")]
        System.Threading.Tasks.Task<int> deleteporjnotificaitonAsync(string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallprojnotificaion", ReplyAction="http://tempuri.org/IDatamanagement/deleteallprojnotificaionResponse")]
        int deleteallprojnotificaion(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallprojnotificaion", ReplyAction="http://tempuri.org/IDatamanagement/deleteallprojnotificaionResponse")]
        System.Threading.Tasks.Task<int> deleteallprojnotificaionAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojnoticedetails", ReplyAction="http://tempuri.org/IDatamanagement/getprojnoticedetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getprojnoticedetails(string projnoticeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojnoticedetails", ReplyAction="http://tempuri.org/IDatamanagement/getprojnoticedetailsResponse")]
        System.Threading.Tasks.Task<object[]> getprojnoticedetailsAsync(string projnoticeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuenotifications", ReplyAction="http://tempuri.org/IDatamanagement/getissuenotificationsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getissuenotifications(string issuenotificationuserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuenotifications", ReplyAction="http://tempuri.org/IDatamanagement/getissuenotificationsResponse")]
        System.Threading.Tasks.Task<object[][]> getissuenotificationsAsync(string issuenotificationuserid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissuenotification", ReplyAction="http://tempuri.org/IDatamanagement/deleteissuenotificationResponse")]
        int deleteissuenotification(string issid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissuenotification", ReplyAction="http://tempuri.org/IDatamanagement/deleteissuenotificationResponse")]
        System.Threading.Tasks.Task<int> deleteissuenotificationAsync(string issid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertissuenotifications", ReplyAction="http://tempuri.org/IDatamanagement/insertissuenotificationsResponse")]
        int insertissuenotifications(string issueid, string uid, System.DateTime credate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertissuenotifications", ReplyAction="http://tempuri.org/IDatamanagement/insertissuenotificationsResponse")]
        System.Threading.Tasks.Task<int> insertissuenotificationsAsync(string issueid, string uid, System.DateTime credate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissnoticeiss", ReplyAction="http://tempuri.org/IDatamanagement/deleteissnoticeissResponse")]
        int deleteissnoticeiss(string issid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissnoticeiss", ReplyAction="http://tempuri.org/IDatamanagement/deleteissnoticeissResponse")]
        System.Threading.Tasks.Task<int> deleteissnoticeissAsync(string issid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getuserinformation", ReplyAction="http://tempuri.org/IDatamanagement/getuserinformationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getuserinformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getuserinformation", ReplyAction="http://tempuri.org/IDatamanagement/getuserinformationResponse")]
        System.Threading.Tasks.Task<object[][]> getuserinformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissnoticeiss", ReplyAction="http://tempuri.org/IDatamanagement/getissnoticeissResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getissnoticeiss(string isid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissnoticeiss", ReplyAction="http://tempuri.org/IDatamanagement/getissnoticeissResponse")]
        System.Threading.Tasks.Task<object[]> getissnoticeissAsync(string isid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectleaderinformaion", ReplyAction="http://tempuri.org/IDatamanagement/getprojectleaderinformaionResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getprojectleaderinformaion(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojectleaderinformaion", ReplyAction="http://tempuri.org/IDatamanagement/getprojectleaderinformaionResponse")]
        System.Threading.Tasks.Task<object[]> getprojectleaderinformaionAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getspecificuserinformation", ReplyAction="http://tempuri.org/IDatamanagement/getspecificuserinformationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getspecificuserinformation(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getspecificuserinformation", ReplyAction="http://tempuri.org/IDatamanagement/getspecificuserinformationResponse")]
        System.Threading.Tasks.Task<object[]> getspecificuserinformationAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuenoticedetails", ReplyAction="http://tempuri.org/IDatamanagement/getissuenoticedetailsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getissuenoticedetails(string isnid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissuenoticedetails", ReplyAction="http://tempuri.org/IDatamanagement/getissuenoticedetailsResponse")]
        System.Threading.Tasks.Task<object[]> getissuenoticedetailsAsync(string isnid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinginfromations", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinginfromationsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getmeetinginfromations(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinginfromations", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinginfromationsResponse")]
        System.Threading.Tasks.Task<object[][]> getmeetinginfromationsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletemeeting", ReplyAction="http://tempuri.org/IDatamanagement/deletemeetingResponse")]
        int deletemeeting(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletemeeting", ReplyAction="http://tempuri.org/IDatamanagement/deletemeetingResponse")]
        System.Threading.Tasks.Task<int> deletemeetingAsync(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getusermeetings", ReplyAction="http://tempuri.org/IDatamanagement/getusermeetingsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getusermeetings(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getusermeetings", ReplyAction="http://tempuri.org/IDatamanagement/getusermeetingsResponse")]
        System.Threading.Tasks.Task<object[][]> getusermeetingsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertmeeting", ReplyAction="http://tempuri.org/IDatamanagement/insertmeetingResponse")]
        int insertmeeting(string meettitle, string meetdesc, string meetdatetime, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertmeeting", ReplyAction="http://tempuri.org/IDatamanagement/insertmeetingResponse")]
        System.Threading.Tasks.Task<int> insertmeetingAsync(string meettitle, string meetdesc, string meetdatetime, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertmeetingmember", ReplyAction="http://tempuri.org/IDatamanagement/insertmeetingmemberResponse")]
        int insertmeetingmember(string meetid, string uid, string mlaccept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertmeetingmember", ReplyAction="http://tempuri.org/IDatamanagement/insertmeetingmemberResponse")]
        System.Threading.Tasks.Task<int> insertmeetingmemberAsync(string meetid, string uid, string mlaccept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatemeetinglink", ReplyAction="http://tempuri.org/IDatamanagement/updatemeetinglinkResponse")]
        int updatemeetinglink(string mlID, string mlaccept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatemeetinglink", ReplyAction="http://tempuri.org/IDatamanagement/updatemeetinglinkResponse")]
        System.Threading.Tasks.Task<int> updatemeetinglinkAsync(string mlID, string mlaccept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatemeeting", ReplyAction="http://tempuri.org/IDatamanagement/updatemeetingResponse")]
        int updatemeeting(string meetingid, string meettitle, string meetdesc, string meetdatetime, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatemeeting", ReplyAction="http://tempuri.org/IDatamanagement/updatemeetingResponse")]
        System.Threading.Tasks.Task<int> updatemeetingAsync(string meetingid, string meettitle, string meetdesc, string meetdatetime, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletemeetingmembers", ReplyAction="http://tempuri.org/IDatamanagement/deletemeetingmembersResponse")]
        int deletemeetingmembers(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletemeetingmembers", ReplyAction="http://tempuri.org/IDatamanagement/deletemeetingmembersResponse")]
        System.Threading.Tasks.Task<int> deletemeetingmembersAsync(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletespecificmember", ReplyAction="http://tempuri.org/IDatamanagement/deletespecificmemberResponse")]
        int deletespecificmember(string meetid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletespecificmember", ReplyAction="http://tempuri.org/IDatamanagement/deletespecificmemberResponse")]
        System.Threading.Tasks.Task<int> deletespecificmemberAsync(string meetid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojmeetings", ReplyAction="http://tempuri.org/IDatamanagement/getprojmeetingsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getprojmeetings(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getprojmeetings", ReplyAction="http://tempuri.org/IDatamanagement/getprojmeetingsResponse")]
        System.Threading.Tasks.Task<object[]> getprojmeetingsAsync(string projid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetingmembers", ReplyAction="http://tempuri.org/IDatamanagement/getmeetingmembersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getmeetingmembers(string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetingmembers", ReplyAction="http://tempuri.org/IDatamanagement/getmeetingmembersResponse")]
        System.Threading.Tasks.Task<object[][]> getmeetingmembersAsync(string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinginformation", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinginformationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getmeetinginformation(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinginformation", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinginformationResponse")]
        System.Threading.Tasks.Task<object[]> getmeetinginformationAsync(string meetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetingattendance", ReplyAction="http://tempuri.org/IDatamanagement/getmeetingattendanceResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getmeetingattendance(string meetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetingattendance", ReplyAction="http://tempuri.org/IDatamanagement/getmeetingattendanceResponse")]
        System.Threading.Tasks.Task<object[][]> getmeetingattendanceAsync(string meetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinglink", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinglinkResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getmeetinglink(string mlid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getmeetinglink", ReplyAction="http://tempuri.org/IDatamanagement/getmeetinglinkResponse")]
        System.Threading.Tasks.Task<object[]> getmeetinglinkAsync(string mlid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertissflag", ReplyAction="http://tempuri.org/IDatamanagement/insertissflagResponse")]
        int insertissflag(string isstitle, string issdesc, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertissflag", ReplyAction="http://tempuri.org/IDatamanagement/insertissflagResponse")]
        System.Threading.Tasks.Task<int> insertissflagAsync(string isstitle, string issdesc, string projid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissueflags", ReplyAction="http://tempuri.org/IDatamanagement/getissueflagsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getissueflags(string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getissueflags", ReplyAction="http://tempuri.org/IDatamanagement/getissueflagsResponse")]
        System.Threading.Tasks.Task<object[][]> getissueflagsAsync(string projID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissflag", ReplyAction="http://tempuri.org/IDatamanagement/deleteissflagResponse")]
        int deleteissflag(string isfid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteissflag", ReplyAction="http://tempuri.org/IDatamanagement/deleteissflagResponse")]
        System.Threading.Tasks.Task<int> deleteissflagAsync(string isfid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatamanagementChannel : Fincal.Dataservice.IDatamanagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatamanagementClient : System.ServiceModel.ClientBase<Fincal.Dataservice.IDatamanagement>, Fincal.Dataservice.IDatamanagement {
        
        public DatamanagementClient() {
        }
        
        public DatamanagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatamanagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatamanagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatamanagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object[] getspecificissflag(string isfid) {
            return base.Channel.getspecificissflag(isfid);
        }
        
        public System.Threading.Tasks.Task<object[]> getspecificissflagAsync(string isfid) {
            return base.Channel.getspecificissflagAsync(isfid);
        }
        
        public int deleteissflagproj(string projid) {
            return base.Channel.deleteissflagproj(projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissflagprojAsync(string projid) {
            return base.Channel.deleteissflagprojAsync(projid);
        }
        
        public int inserttask(string name, string complete, string category, string googleid, string uid) {
            return base.Channel.inserttask(name, complete, category, googleid, uid);
        }
        
        public System.Threading.Tasks.Task<int> inserttaskAsync(string name, string complete, string category, string googleid, string uid) {
            return base.Channel.inserttaskAsync(name, complete, category, googleid, uid);
        }
        
        public int deletetask(string GoogleID, string uid) {
            return base.Channel.deletetask(GoogleID, uid);
        }
        
        public System.Threading.Tasks.Task<int> deletetaskAsync(string GoogleID, string uid) {
            return base.Channel.deletetaskAsync(GoogleID, uid);
        }
        
        public object[] gettaskcat() {
            return base.Channel.gettaskcat();
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskcatAsync() {
            return base.Channel.gettaskcatAsync();
        }
        
        public object[] gettask(string GoogleID, string uid) {
            return base.Channel.gettask(GoogleID, uid);
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskAsync(string GoogleID, string uid) {
            return base.Channel.gettaskAsync(GoogleID, uid);
        }
        
        public int updatetask(string name, string complete, string uid, string tcid, string googleid, string taskid) {
            return base.Channel.updatetask(name, complete, uid, tcid, googleid, taskid);
        }
        
        public System.Threading.Tasks.Task<int> updatetaskAsync(string name, string complete, string uid, string tcid, string googleid, string taskid) {
            return base.Channel.updatetaskAsync(name, complete, uid, tcid, googleid, taskid);
        }
        
        public string checktasks(string ID, string uid) {
            return base.Channel.checktasks(ID, uid);
        }
        
        public System.Threading.Tasks.Task<string> checktasksAsync(string ID, string uid) {
            return base.Channel.checktasksAsync(ID, uid);
        }
        
        public object[] gettaskids(string uid) {
            return base.Channel.gettaskids(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskidsAsync(string uid) {
            return base.Channel.gettaskidsAsync(uid);
        }
        
        public int insertevent(System.DateTime edate, string summary, string location, string googleid, string uid, string desc) {
            return base.Channel.insertevent(edate, summary, location, googleid, uid, desc);
        }
        
        public System.Threading.Tasks.Task<int> inserteventAsync(System.DateTime edate, string summary, string location, string googleid, string uid, string desc) {
            return base.Channel.inserteventAsync(edate, summary, location, googleid, uid, desc);
        }
        
        public int updateevent(System.DateTime edate, string summary, string location, string desc, string googleid, string eid) {
            return base.Channel.updateevent(edate, summary, location, desc, googleid, eid);
        }
        
        public System.Threading.Tasks.Task<int> updateeventAsync(System.DateTime edate, string summary, string location, string desc, string googleid, string eid) {
            return base.Channel.updateeventAsync(edate, summary, location, desc, googleid, eid);
        }
        
        public string checkevents(string ID, string uid) {
            return base.Channel.checkevents(ID, uid);
        }
        
        public System.Threading.Tasks.Task<string> checkeventsAsync(string ID, string uid) {
            return base.Channel.checkeventsAsync(ID, uid);
        }
        
        public int deleteevent(string GoogleID, string uid) {
            return base.Channel.deleteevent(GoogleID, uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteeventAsync(string GoogleID, string uid) {
            return base.Channel.deleteeventAsync(GoogleID, uid);
        }
        
        public object[] getevent(string googleid, string uid) {
            return base.Channel.getevent(googleid, uid);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventAsync(string googleid, string uid) {
            return base.Channel.geteventAsync(googleid, uid);
        }
        
        public int deleteeventpics(string GoogleID, string uid) {
            return base.Channel.deleteeventpics(GoogleID, uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteeventpicsAsync(string GoogleID, string uid) {
            return base.Channel.deleteeventpicsAsync(GoogleID, uid);
        }
        
        public object[] geteventids(string uid) {
            return base.Channel.geteventids(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventidsAsync(string uid) {
            return base.Channel.geteventidsAsync(uid);
        }
        
        public object[][] getalluserevents(string uid) {
            return base.Channel.getalluserevents(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getallusereventsAsync(string uid) {
            return base.Channel.getallusereventsAsync(uid);
        }
        
        public int inserteventpic(string eid, string pic, string egoogleid, string uid) {
            return base.Channel.inserteventpic(eid, pic, egoogleid, uid);
        }
        
        public System.Threading.Tasks.Task<int> inserteventpicAsync(string eid, string pic, string egoogleid, string uid) {
            return base.Channel.inserteventpicAsync(eid, pic, egoogleid, uid);
        }
        
        public object[] geteventpics(string id, string uid) {
            return base.Channel.geteventpics(id, uid);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventpicsAsync(string id, string uid) {
            return base.Channel.geteventpicsAsync(id, uid);
        }
        
        public string geteventfirstpics(string id, string uid) {
            return base.Channel.geteventfirstpics(id, uid);
        }
        
        public System.Threading.Tasks.Task<string> geteventfirstpicsAsync(string id, string uid) {
            return base.Channel.geteventfirstpicsAsync(id, uid);
        }
        
        public int insertpicture(string picture, string title, string description, string uid) {
            return base.Channel.insertpicture(picture, title, description, uid);
        }
        
        public System.Threading.Tasks.Task<int> insertpictureAsync(string picture, string title, string description, string uid) {
            return base.Channel.insertpictureAsync(picture, title, description, uid);
        }
        
        public int deletepicture(string id, string uid) {
            return base.Channel.deletepicture(id, uid);
        }
        
        public System.Threading.Tasks.Task<int> deletepictureAsync(string id, string uid) {
            return base.Channel.deletepictureAsync(id, uid);
        }
        
        public int deleteallpictures(string uid) {
            return base.Channel.deleteallpictures(uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteallpicturesAsync(string uid) {
            return base.Channel.deleteallpicturesAsync(uid);
        }
        
        public object[][] getalluserpictures(string uid) {
            return base.Channel.getalluserpictures(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getalluserpicturesAsync(string uid) {
            return base.Channel.getalluserpicturesAsync(uid);
        }
        
        public object[] getpic(string id, string uid) {
            return base.Channel.getpic(id, uid);
        }
        
        public System.Threading.Tasks.Task<object[]> getpicAsync(string id, string uid) {
            return base.Channel.getpicAsync(id, uid);
        }
        
        public int updatepic(string id, string title, string description, string uid) {
            return base.Channel.updatepic(id, title, description, uid);
        }
        
        public System.Threading.Tasks.Task<int> updatepicAsync(string id, string title, string description, string uid) {
            return base.Channel.updatepicAsync(id, title, description, uid);
        }
        
        public object[][] getfewpics(string uid) {
            return base.Channel.getfewpics(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getfewpicsAsync(string uid) {
            return base.Channel.getfewpicsAsync(uid);
        }
        
        public int insertsechedule(System.DateTime starttime, System.DateTime endtime, string category) {
            return base.Channel.insertsechedule(starttime, endtime, category);
        }
        
        public System.Threading.Tasks.Task<int> insertsecheduleAsync(System.DateTime starttime, System.DateTime endtime, string category) {
            return base.Channel.insertsecheduleAsync(starttime, endtime, category);
        }
        
        public int deleteschedule(string id) {
            return base.Channel.deleteschedule(id);
        }
        
        public System.Threading.Tasks.Task<int> deletescheduleAsync(string id) {
            return base.Channel.deletescheduleAsync(id);
        }
        
        public int updateschedule(System.DateTime starttime, System.DateTime endtime, string category, string id) {
            return base.Channel.updateschedule(starttime, endtime, category, id);
        }
        
        public System.Threading.Tasks.Task<int> updatescheduleAsync(System.DateTime starttime, System.DateTime endtime, string category, string id) {
            return base.Channel.updatescheduleAsync(starttime, endtime, category, id);
        }
        
        public object[] getskills() {
            return base.Channel.getskills();
        }
        
        public System.Threading.Tasks.Task<object[]> getskillsAsync() {
            return base.Channel.getskillsAsync();
        }
        
        public object[] getassignedprojects(string uid) {
            return base.Channel.getassignedprojects(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> getassignedprojectsAsync(string uid) {
            return base.Channel.getassignedprojectsAsync(uid);
        }
        
        public object[] getprojectdetails(string projid) {
            return base.Channel.getprojectdetails(projid);
        }
        
        public System.Threading.Tasks.Task<object[]> getprojectdetailsAsync(string projid) {
            return base.Channel.getprojectdetailsAsync(projid);
        }
        
        public object[][] getprojects(string uid) {
            return base.Channel.getprojects(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getprojectsAsync(string uid) {
            return base.Channel.getprojectsAsync(uid);
        }
        
        public int createproject(string title, string description, string uid, System.DateTime pcredate) {
            return base.Channel.createproject(title, description, uid, pcredate);
        }
        
        public System.Threading.Tasks.Task<int> createprojectAsync(string title, string description, string uid, System.DateTime pcredate) {
            return base.Channel.createprojectAsync(title, description, uid, pcredate);
        }
        
        public int updateproject(string title, string description, string projID) {
            return base.Channel.updateproject(title, description, projID);
        }
        
        public System.Threading.Tasks.Task<int> updateprojectAsync(string title, string description, string projID) {
            return base.Channel.updateprojectAsync(title, description, projID);
        }
        
        public int deleteproject(string projid) {
            return base.Channel.deleteproject(projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteprojectAsync(string projid) {
            return base.Channel.deleteprojectAsync(projid);
        }
        
        public object[][] getassignedprojdetials(string uid) {
            return base.Channel.getassignedprojdetials(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getassignedprojdetialsAsync(string uid) {
            return base.Channel.getassignedprojdetialsAsync(uid);
        }
        
        public object[] getassignedissues(string uid) {
            return base.Channel.getassignedissues(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> getassignedissuesAsync(string uid) {
            return base.Channel.getassignedissuesAsync(uid);
        }
        
        public object[][] getissues(string uid) {
            return base.Channel.getissues(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getissuesAsync(string uid) {
            return base.Channel.getissuesAsync(uid);
        }
        
        public object[][] getprojissues(string projid) {
            return base.Channel.getprojissues(projid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getprojissuesAsync(string projid) {
            return base.Channel.getprojissuesAsync(projid);
        }
        
        public object[] getissuedetails(string issueid) {
            return base.Channel.getissuedetails(issueid);
        }
        
        public System.Threading.Tasks.Task<object[]> getissuedetailsAsync(string issueid) {
            return base.Channel.getissuedetailsAsync(issueid);
        }
        
        public int createissue(string title, string description, string projid, string category, string uid, System.DateTime iscredate) {
            return base.Channel.createissue(title, description, projid, category, uid, iscredate);
        }
        
        public System.Threading.Tasks.Task<int> createissueAsync(string title, string description, string projid, string category, string uid, System.DateTime iscredate) {
            return base.Channel.createissueAsync(title, description, projid, category, uid, iscredate);
        }
        
        public int updateissue(string isid, string status, string assid) {
            return base.Channel.updateissue(isid, status, assid);
        }
        
        public System.Threading.Tasks.Task<int> updateissueAsync(string isid, string status, string assid) {
            return base.Channel.updateissueAsync(isid, status, assid);
        }
        
        public int deleteissue(string issueid) {
            return base.Channel.deleteissue(issueid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissueAsync(string issueid) {
            return base.Channel.deleteissueAsync(issueid);
        }
        
        public int deleteprojissues(string projid) {
            return base.Channel.deleteprojissues(projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteprojissuesAsync(string projid) {
            return base.Channel.deleteprojissuesAsync(projid);
        }
        
        public object[][] issueteam(string isID) {
            return base.Channel.issueteam(isID);
        }
        
        public System.Threading.Tasks.Task<object[][]> issueteamAsync(string isID) {
            return base.Channel.issueteamAsync(isID);
        }
        
        public object[][] getassignedissdetials(string uid) {
            return base.Channel.getassignedissdetials(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getassignedissdetialsAsync(string uid) {
            return base.Channel.getassignedissdetialsAsync(uid);
        }
        
        public int addprojteam(string uid, string projid) {
            return base.Channel.addprojteam(uid, projid);
        }
        
        public System.Threading.Tasks.Task<int> addprojteamAsync(string uid, string projid) {
            return base.Channel.addprojteamAsync(uid, projid);
        }
        
        public int deleteprojteam(string projid) {
            return base.Channel.deleteprojteam(projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteprojteamAsync(string projid) {
            return base.Channel.deleteprojteamAsync(projid);
        }
        
        public int deleteassiguserfromteam(string uid, string projid) {
            return base.Channel.deleteassiguserfromteam(uid, projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteassiguserfromteamAsync(string uid, string projid) {
            return base.Channel.deleteassiguserfromteamAsync(uid, projid);
        }
        
        public object[] getprojectmembers(string projid) {
            return base.Channel.getprojectmembers(projid);
        }
        
        public System.Threading.Tasks.Task<object[]> getprojectmembersAsync(string projid) {
            return base.Channel.getprojectmembersAsync(projid);
        }
        
        public int addissteam(string uid, string issueid) {
            return base.Channel.addissteam(uid, issueid);
        }
        
        public System.Threading.Tasks.Task<int> addissteamAsync(string uid, string issueid) {
            return base.Channel.addissteamAsync(uid, issueid);
        }
        
        public int deleteissteam(string issueid) {
            return base.Channel.deleteissteam(issueid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissteamAsync(string issueid) {
            return base.Channel.deleteissteamAsync(issueid);
        }
        
        public int deleteassiguserformissue(string uid, string issueid) {
            return base.Channel.deleteassiguserformissue(uid, issueid);
        }
        
        public System.Threading.Tasks.Task<int> deleteassiguserformissueAsync(string uid, string issueid) {
            return base.Channel.deleteassiguserformissueAsync(uid, issueid);
        }
        
        public object[] getissuemembers(string issid) {
            return base.Channel.getissuemembers(issid);
        }
        
        public System.Threading.Tasks.Task<object[]> getissuemembersAsync(string issid) {
            return base.Channel.getissuemembersAsync(issid);
        }
        
        public object[][] getprojnotification(string projectnotificationuserid) {
            return base.Channel.getprojnotification(projectnotificationuserid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getprojnotificationAsync(string projectnotificationuserid) {
            return base.Channel.getprojnotificationAsync(projectnotificationuserid);
        }
        
        public int insertprojectnotifications(string porjid, string uid, System.DateTime credate) {
            return base.Channel.insertprojectnotifications(porjid, uid, credate);
        }
        
        public System.Threading.Tasks.Task<int> insertprojectnotificationsAsync(string porjid, string uid, System.DateTime credate) {
            return base.Channel.insertprojectnotificationsAsync(porjid, uid, credate);
        }
        
        public int deleteporjnotificaiton(string projid, string uid) {
            return base.Channel.deleteporjnotificaiton(projid, uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteporjnotificaitonAsync(string projid, string uid) {
            return base.Channel.deleteporjnotificaitonAsync(projid, uid);
        }
        
        public int deleteallprojnotificaion(string projid) {
            return base.Channel.deleteallprojnotificaion(projid);
        }
        
        public System.Threading.Tasks.Task<int> deleteallprojnotificaionAsync(string projid) {
            return base.Channel.deleteallprojnotificaionAsync(projid);
        }
        
        public object[] getprojnoticedetails(string projnoticeid) {
            return base.Channel.getprojnoticedetails(projnoticeid);
        }
        
        public System.Threading.Tasks.Task<object[]> getprojnoticedetailsAsync(string projnoticeid) {
            return base.Channel.getprojnoticedetailsAsync(projnoticeid);
        }
        
        public object[][] getissuenotifications(string issuenotificationuserid) {
            return base.Channel.getissuenotifications(issuenotificationuserid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getissuenotificationsAsync(string issuenotificationuserid) {
            return base.Channel.getissuenotificationsAsync(issuenotificationuserid);
        }
        
        public int deleteissuenotification(string issid, string uid) {
            return base.Channel.deleteissuenotification(issid, uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissuenotificationAsync(string issid, string uid) {
            return base.Channel.deleteissuenotificationAsync(issid, uid);
        }
        
        public int insertissuenotifications(string issueid, string uid, System.DateTime credate) {
            return base.Channel.insertissuenotifications(issueid, uid, credate);
        }
        
        public System.Threading.Tasks.Task<int> insertissuenotificationsAsync(string issueid, string uid, System.DateTime credate) {
            return base.Channel.insertissuenotificationsAsync(issueid, uid, credate);
        }
        
        public int deleteissnoticeiss(string issid) {
            return base.Channel.deleteissnoticeiss(issid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissnoticeissAsync(string issid) {
            return base.Channel.deleteissnoticeissAsync(issid);
        }
        
        public object[][] getuserinformation() {
            return base.Channel.getuserinformation();
        }
        
        public System.Threading.Tasks.Task<object[][]> getuserinformationAsync() {
            return base.Channel.getuserinformationAsync();
        }
        
        public object[] getissnoticeiss(string isid) {
            return base.Channel.getissnoticeiss(isid);
        }
        
        public System.Threading.Tasks.Task<object[]> getissnoticeissAsync(string isid) {
            return base.Channel.getissnoticeissAsync(isid);
        }
        
        public object[] getprojectleaderinformaion(string uid) {
            return base.Channel.getprojectleaderinformaion(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> getprojectleaderinformaionAsync(string uid) {
            return base.Channel.getprojectleaderinformaionAsync(uid);
        }
        
        public object[] getspecificuserinformation(string uid) {
            return base.Channel.getspecificuserinformation(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> getspecificuserinformationAsync(string uid) {
            return base.Channel.getspecificuserinformationAsync(uid);
        }
        
        public object[] getissuenoticedetails(string isnid) {
            return base.Channel.getissuenoticedetails(isnid);
        }
        
        public System.Threading.Tasks.Task<object[]> getissuenoticedetailsAsync(string isnid) {
            return base.Channel.getissuenoticedetailsAsync(isnid);
        }
        
        public object[][] getmeetinginfromations(string uid) {
            return base.Channel.getmeetinginfromations(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getmeetinginfromationsAsync(string uid) {
            return base.Channel.getmeetinginfromationsAsync(uid);
        }
        
        public int deletemeeting(string meetid) {
            return base.Channel.deletemeeting(meetid);
        }
        
        public System.Threading.Tasks.Task<int> deletemeetingAsync(string meetid) {
            return base.Channel.deletemeetingAsync(meetid);
        }
        
        public object[][] getusermeetings(string uid) {
            return base.Channel.getusermeetings(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getusermeetingsAsync(string uid) {
            return base.Channel.getusermeetingsAsync(uid);
        }
        
        public int insertmeeting(string meettitle, string meetdesc, string meetdatetime, string projid, string uid) {
            return base.Channel.insertmeeting(meettitle, meetdesc, meetdatetime, projid, uid);
        }
        
        public System.Threading.Tasks.Task<int> insertmeetingAsync(string meettitle, string meetdesc, string meetdatetime, string projid, string uid) {
            return base.Channel.insertmeetingAsync(meettitle, meetdesc, meetdatetime, projid, uid);
        }
        
        public int insertmeetingmember(string meetid, string uid, string mlaccept) {
            return base.Channel.insertmeetingmember(meetid, uid, mlaccept);
        }
        
        public System.Threading.Tasks.Task<int> insertmeetingmemberAsync(string meetid, string uid, string mlaccept) {
            return base.Channel.insertmeetingmemberAsync(meetid, uid, mlaccept);
        }
        
        public int updatemeetinglink(string mlID, string mlaccept) {
            return base.Channel.updatemeetinglink(mlID, mlaccept);
        }
        
        public System.Threading.Tasks.Task<int> updatemeetinglinkAsync(string mlID, string mlaccept) {
            return base.Channel.updatemeetinglinkAsync(mlID, mlaccept);
        }
        
        public int updatemeeting(string meetingid, string meettitle, string meetdesc, string meetdatetime, string projid, string uid) {
            return base.Channel.updatemeeting(meetingid, meettitle, meetdesc, meetdatetime, projid, uid);
        }
        
        public System.Threading.Tasks.Task<int> updatemeetingAsync(string meetingid, string meettitle, string meetdesc, string meetdatetime, string projid, string uid) {
            return base.Channel.updatemeetingAsync(meetingid, meettitle, meetdesc, meetdatetime, projid, uid);
        }
        
        public int deletemeetingmembers(string meetid) {
            return base.Channel.deletemeetingmembers(meetid);
        }
        
        public System.Threading.Tasks.Task<int> deletemeetingmembersAsync(string meetid) {
            return base.Channel.deletemeetingmembersAsync(meetid);
        }
        
        public int deletespecificmember(string meetid, string uid) {
            return base.Channel.deletespecificmember(meetid, uid);
        }
        
        public System.Threading.Tasks.Task<int> deletespecificmemberAsync(string meetid, string uid) {
            return base.Channel.deletespecificmemberAsync(meetid, uid);
        }
        
        public object[] getprojmeetings(string projid) {
            return base.Channel.getprojmeetings(projid);
        }
        
        public System.Threading.Tasks.Task<object[]> getprojmeetingsAsync(string projid) {
            return base.Channel.getprojmeetingsAsync(projid);
        }
        
        public object[][] getmeetingmembers(string projID) {
            return base.Channel.getmeetingmembers(projID);
        }
        
        public System.Threading.Tasks.Task<object[][]> getmeetingmembersAsync(string projID) {
            return base.Channel.getmeetingmembersAsync(projID);
        }
        
        public object[] getmeetinginformation(string meetid) {
            return base.Channel.getmeetinginformation(meetid);
        }
        
        public System.Threading.Tasks.Task<object[]> getmeetinginformationAsync(string meetid) {
            return base.Channel.getmeetinginformationAsync(meetid);
        }
        
        public object[][] getmeetingattendance(string meetID) {
            return base.Channel.getmeetingattendance(meetID);
        }
        
        public System.Threading.Tasks.Task<object[][]> getmeetingattendanceAsync(string meetID) {
            return base.Channel.getmeetingattendanceAsync(meetID);
        }
        
        public object[] getmeetinglink(string mlid) {
            return base.Channel.getmeetinglink(mlid);
        }
        
        public System.Threading.Tasks.Task<object[]> getmeetinglinkAsync(string mlid) {
            return base.Channel.getmeetinglinkAsync(mlid);
        }
        
        public int insertissflag(string isstitle, string issdesc, string projid, string uid) {
            return base.Channel.insertissflag(isstitle, issdesc, projid, uid);
        }
        
        public System.Threading.Tasks.Task<int> insertissflagAsync(string isstitle, string issdesc, string projid, string uid) {
            return base.Channel.insertissflagAsync(isstitle, issdesc, projid, uid);
        }
        
        public object[][] getissueflags(string projID) {
            return base.Channel.getissueflags(projID);
        }
        
        public System.Threading.Tasks.Task<object[][]> getissueflagsAsync(string projID) {
            return base.Channel.getissueflagsAsync(projID);
        }
        
        public int deleteissflag(string isfid) {
            return base.Channel.deleteissflag(isfid);
        }
        
        public System.Threading.Tasks.Task<int> deleteissflagAsync(string isfid) {
            return base.Channel.deleteissflagAsync(isfid);
        }
    }
}
