//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fincal.Dataservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Dataservice.IDatamanagement")]
    public interface IDatamanagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserttask", ReplyAction="http://tempuri.org/IDatamanagement/inserttaskResponse")]
        int inserttask(string name, int complete, string category, string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserttask", ReplyAction="http://tempuri.org/IDatamanagement/inserttaskResponse")]
        System.Threading.Tasks.Task<int> inserttaskAsync(string name, int complete, string category, string googleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletetask", ReplyAction="http://tempuri.org/IDatamanagement/deletetaskResponse")]
        int deletetask(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletetask", ReplyAction="http://tempuri.org/IDatamanagement/deletetaskResponse")]
        System.Threading.Tasks.Task<int> deletetaskAsync(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskcat", ReplyAction="http://tempuri.org/IDatamanagement/gettaskcatResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettaskcat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskcat", ReplyAction="http://tempuri.org/IDatamanagement/gettaskcatResponse")]
        System.Threading.Tasks.Task<object[]> gettaskcatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettask", ReplyAction="http://tempuri.org/IDatamanagement/gettaskResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettask(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettask", ReplyAction="http://tempuri.org/IDatamanagement/gettaskResponse")]
        System.Threading.Tasks.Task<object[]> gettaskAsync(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatetask", ReplyAction="http://tempuri.org/IDatamanagement/updatetaskResponse")]
        int updatetask(string name, int complete, string uid, string tcid, string googleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatetask", ReplyAction="http://tempuri.org/IDatamanagement/updatetaskResponse")]
        System.Threading.Tasks.Task<int> updatetaskAsync(string name, int complete, string uid, string tcid, string googleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checktasks", ReplyAction="http://tempuri.org/IDatamanagement/checktasksResponse")]
        string checktasks(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checktasks", ReplyAction="http://tempuri.org/IDatamanagement/checktasksResponse")]
        System.Threading.Tasks.Task<string> checktasksAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskids", ReplyAction="http://tempuri.org/IDatamanagement/gettaskidsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] gettaskids(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/gettaskids", ReplyAction="http://tempuri.org/IDatamanagement/gettaskidsResponse")]
        System.Threading.Tasks.Task<object[]> gettaskidsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertevent", ReplyAction="http://tempuri.org/IDatamanagement/inserteventResponse")]
        int insertevent(System.DateTime edate, string summary, string location, string googleid, string uid, string desc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertevent", ReplyAction="http://tempuri.org/IDatamanagement/inserteventResponse")]
        System.Threading.Tasks.Task<int> inserteventAsync(System.DateTime edate, string summary, string location, string googleid, string uid, string desc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateevent", ReplyAction="http://tempuri.org/IDatamanagement/updateeventResponse")]
        int updateevent(System.DateTime edate, string summary, string location, string desc, string eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateevent", ReplyAction="http://tempuri.org/IDatamanagement/updateeventResponse")]
        System.Threading.Tasks.Task<int> updateeventAsync(System.DateTime edate, string summary, string location, string desc, string eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checkevents", ReplyAction="http://tempuri.org/IDatamanagement/checkeventsResponse")]
        string checkevents(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/checkevents", ReplyAction="http://tempuri.org/IDatamanagement/checkeventsResponse")]
        System.Threading.Tasks.Task<string> checkeventsAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteevent", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventResponse")]
        int deleteevent(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteevent", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventResponse")]
        System.Threading.Tasks.Task<int> deleteeventAsync(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getevent", ReplyAction="http://tempuri.org/IDatamanagement/geteventResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getevent(string googleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getevent", ReplyAction="http://tempuri.org/IDatamanagement/geteventResponse")]
        System.Threading.Tasks.Task<object[]> geteventAsync(string googleid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteeventpics", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventpicsResponse")]
        int deleteeventpics(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteeventpics", ReplyAction="http://tempuri.org/IDatamanagement/deleteeventpicsResponse")]
        System.Threading.Tasks.Task<int> deleteeventpicsAsync(string GoogleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventids", ReplyAction="http://tempuri.org/IDatamanagement/geteventidsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] geteventids(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventids", ReplyAction="http://tempuri.org/IDatamanagement/geteventidsResponse")]
        System.Threading.Tasks.Task<object[]> geteventidsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserteventpic", ReplyAction="http://tempuri.org/IDatamanagement/inserteventpicResponse")]
        int inserteventpic(string eid, string pic, string egoogleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/inserteventpic", ReplyAction="http://tempuri.org/IDatamanagement/inserteventpicResponse")]
        System.Threading.Tasks.Task<int> inserteventpicAsync(string eid, string pic, string egoogleid, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventpicsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] geteventpics(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventpicsResponse")]
        System.Threading.Tasks.Task<object[]> geteventpicsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventfirstpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventfirstpicsResponse")]
        string geteventfirstpics(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/geteventfirstpics", ReplyAction="http://tempuri.org/IDatamanagement/geteventfirstpicsResponse")]
        System.Threading.Tasks.Task<string> geteventfirstpicsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertpicture", ReplyAction="http://tempuri.org/IDatamanagement/insertpictureResponse")]
        int insertpicture(string picture, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertpicture", ReplyAction="http://tempuri.org/IDatamanagement/insertpictureResponse")]
        System.Threading.Tasks.Task<int> insertpictureAsync(string picture, string description, string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletepicture", ReplyAction="http://tempuri.org/IDatamanagement/deletepictureResponse")]
        int deletepicture(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deletepicture", ReplyAction="http://tempuri.org/IDatamanagement/deletepictureResponse")]
        System.Threading.Tasks.Task<int> deletepictureAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallpictures", ReplyAction="http://tempuri.org/IDatamanagement/deleteallpicturesResponse")]
        int deleteallpictures(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteallpictures", ReplyAction="http://tempuri.org/IDatamanagement/deleteallpicturesResponse")]
        System.Threading.Tasks.Task<int> deleteallpicturesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserpictures", ReplyAction="http://tempuri.org/IDatamanagement/getalluserpicturesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getalluserpictures(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getalluserpictures", ReplyAction="http://tempuri.org/IDatamanagement/getalluserpicturesResponse")]
        System.Threading.Tasks.Task<object[][]> getalluserpicturesAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getpic", ReplyAction="http://tempuri.org/IDatamanagement/getpicResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[] getpic(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getpic", ReplyAction="http://tempuri.org/IDatamanagement/getpicResponse")]
        System.Threading.Tasks.Task<object[]> getpicAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatepic", ReplyAction="http://tempuri.org/IDatamanagement/updatepicResponse")]
        int updatepic(string id, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updatepic", ReplyAction="http://tempuri.org/IDatamanagement/updatepicResponse")]
        System.Threading.Tasks.Task<int> updatepicAsync(string id, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getfewpics", ReplyAction="http://tempuri.org/IDatamanagement/getfewpicsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[][]))]
        object[][] getfewpics(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/getfewpics", ReplyAction="http://tempuri.org/IDatamanagement/getfewpicsResponse")]
        System.Threading.Tasks.Task<object[][]> getfewpicsAsync(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertsechedule", ReplyAction="http://tempuri.org/IDatamanagement/insertsecheduleResponse")]
        int insertsechedule(System.DateTime starttime, System.DateTime endtime, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/insertsechedule", ReplyAction="http://tempuri.org/IDatamanagement/insertsecheduleResponse")]
        System.Threading.Tasks.Task<int> insertsecheduleAsync(System.DateTime starttime, System.DateTime endtime, string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteschedule", ReplyAction="http://tempuri.org/IDatamanagement/deletescheduleResponse")]
        int deleteschedule(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/deleteschedule", ReplyAction="http://tempuri.org/IDatamanagement/deletescheduleResponse")]
        System.Threading.Tasks.Task<int> deletescheduleAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateschedule", ReplyAction="http://tempuri.org/IDatamanagement/updatescheduleResponse")]
        int updateschedule(System.DateTime starttime, System.DateTime endtime, string category, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatamanagement/updateschedule", ReplyAction="http://tempuri.org/IDatamanagement/updatescheduleResponse")]
        System.Threading.Tasks.Task<int> updatescheduleAsync(System.DateTime starttime, System.DateTime endtime, string category, string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatamanagementChannel : Fincal.Dataservice.IDatamanagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatamanagementClient : System.ServiceModel.ClientBase<Fincal.Dataservice.IDatamanagement>, Fincal.Dataservice.IDatamanagement {
        
        public DatamanagementClient() {
        }
        
        public DatamanagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatamanagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatamanagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatamanagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int inserttask(string name, int complete, string category, string googleid, string uid) {
            return base.Channel.inserttask(name, complete, category, googleid, uid);
        }
        
        public System.Threading.Tasks.Task<int> inserttaskAsync(string name, int complete, string category, string googleid, string uid) {
            return base.Channel.inserttaskAsync(name, complete, category, googleid, uid);
        }
        
        public int deletetask(string GoogleID) {
            return base.Channel.deletetask(GoogleID);
        }
        
        public System.Threading.Tasks.Task<int> deletetaskAsync(string GoogleID) {
            return base.Channel.deletetaskAsync(GoogleID);
        }
        
        public object[] gettaskcat() {
            return base.Channel.gettaskcat();
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskcatAsync() {
            return base.Channel.gettaskcatAsync();
        }
        
        public object[] gettask(string GoogleID) {
            return base.Channel.gettask(GoogleID);
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskAsync(string GoogleID) {
            return base.Channel.gettaskAsync(GoogleID);
        }
        
        public int updatetask(string name, int complete, string uid, string tcid, string googleid) {
            return base.Channel.updatetask(name, complete, uid, tcid, googleid);
        }
        
        public System.Threading.Tasks.Task<int> updatetaskAsync(string name, int complete, string uid, string tcid, string googleid) {
            return base.Channel.updatetaskAsync(name, complete, uid, tcid, googleid);
        }
        
        public string checktasks(string ID) {
            return base.Channel.checktasks(ID);
        }
        
        public System.Threading.Tasks.Task<string> checktasksAsync(string ID) {
            return base.Channel.checktasksAsync(ID);
        }
        
        public object[] gettaskids(string uid) {
            return base.Channel.gettaskids(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> gettaskidsAsync(string uid) {
            return base.Channel.gettaskidsAsync(uid);
        }
        
        public int insertevent(System.DateTime edate, string summary, string location, string googleid, string uid, string desc) {
            return base.Channel.insertevent(edate, summary, location, googleid, uid, desc);
        }
        
        public System.Threading.Tasks.Task<int> inserteventAsync(System.DateTime edate, string summary, string location, string googleid, string uid, string desc) {
            return base.Channel.inserteventAsync(edate, summary, location, googleid, uid, desc);
        }
        
        public int updateevent(System.DateTime edate, string summary, string location, string desc, string eid) {
            return base.Channel.updateevent(edate, summary, location, desc, eid);
        }
        
        public System.Threading.Tasks.Task<int> updateeventAsync(System.DateTime edate, string summary, string location, string desc, string eid) {
            return base.Channel.updateeventAsync(edate, summary, location, desc, eid);
        }
        
        public string checkevents(string ID) {
            return base.Channel.checkevents(ID);
        }
        
        public System.Threading.Tasks.Task<string> checkeventsAsync(string ID) {
            return base.Channel.checkeventsAsync(ID);
        }
        
        public int deleteevent(string GoogleID) {
            return base.Channel.deleteevent(GoogleID);
        }
        
        public System.Threading.Tasks.Task<int> deleteeventAsync(string GoogleID) {
            return base.Channel.deleteeventAsync(GoogleID);
        }
        
        public object[] getevent(string googleid) {
            return base.Channel.getevent(googleid);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventAsync(string googleid) {
            return base.Channel.geteventAsync(googleid);
        }
        
        public int deleteeventpics(string GoogleID) {
            return base.Channel.deleteeventpics(GoogleID);
        }
        
        public System.Threading.Tasks.Task<int> deleteeventpicsAsync(string GoogleID) {
            return base.Channel.deleteeventpicsAsync(GoogleID);
        }
        
        public object[] geteventids(string uid) {
            return base.Channel.geteventids(uid);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventidsAsync(string uid) {
            return base.Channel.geteventidsAsync(uid);
        }
        
        public int inserteventpic(string eid, string pic, string egoogleid, string uid) {
            return base.Channel.inserteventpic(eid, pic, egoogleid, uid);
        }
        
        public System.Threading.Tasks.Task<int> inserteventpicAsync(string eid, string pic, string egoogleid, string uid) {
            return base.Channel.inserteventpicAsync(eid, pic, egoogleid, uid);
        }
        
        public object[] geteventpics(string id) {
            return base.Channel.geteventpics(id);
        }
        
        public System.Threading.Tasks.Task<object[]> geteventpicsAsync(string id) {
            return base.Channel.geteventpicsAsync(id);
        }
        
        public string geteventfirstpics(string id) {
            return base.Channel.geteventfirstpics(id);
        }
        
        public System.Threading.Tasks.Task<string> geteventfirstpicsAsync(string id) {
            return base.Channel.geteventfirstpicsAsync(id);
        }
        
        public int insertpicture(string picture, string description, string uid) {
            return base.Channel.insertpicture(picture, description, uid);
        }
        
        public System.Threading.Tasks.Task<int> insertpictureAsync(string picture, string description, string uid) {
            return base.Channel.insertpictureAsync(picture, description, uid);
        }
        
        public int deletepicture(string id) {
            return base.Channel.deletepicture(id);
        }
        
        public System.Threading.Tasks.Task<int> deletepictureAsync(string id) {
            return base.Channel.deletepictureAsync(id);
        }
        
        public int deleteallpictures(string uid) {
            return base.Channel.deleteallpictures(uid);
        }
        
        public System.Threading.Tasks.Task<int> deleteallpicturesAsync(string uid) {
            return base.Channel.deleteallpicturesAsync(uid);
        }
        
        public object[][] getalluserpictures(string uid) {
            return base.Channel.getalluserpictures(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getalluserpicturesAsync(string uid) {
            return base.Channel.getalluserpicturesAsync(uid);
        }
        
        public object[] getpic(string id) {
            return base.Channel.getpic(id);
        }
        
        public System.Threading.Tasks.Task<object[]> getpicAsync(string id) {
            return base.Channel.getpicAsync(id);
        }
        
        public int updatepic(string id, string description) {
            return base.Channel.updatepic(id, description);
        }
        
        public System.Threading.Tasks.Task<int> updatepicAsync(string id, string description) {
            return base.Channel.updatepicAsync(id, description);
        }
        
        public object[][] getfewpics(string uid) {
            return base.Channel.getfewpics(uid);
        }
        
        public System.Threading.Tasks.Task<object[][]> getfewpicsAsync(string uid) {
            return base.Channel.getfewpicsAsync(uid);
        }
        
        public int insertsechedule(System.DateTime starttime, System.DateTime endtime, string category) {
            return base.Channel.insertsechedule(starttime, endtime, category);
        }
        
        public System.Threading.Tasks.Task<int> insertsecheduleAsync(System.DateTime starttime, System.DateTime endtime, string category) {
            return base.Channel.insertsecheduleAsync(starttime, endtime, category);
        }
        
        public int deleteschedule(string id) {
            return base.Channel.deleteschedule(id);
        }
        
        public System.Threading.Tasks.Task<int> deletescheduleAsync(string id) {
            return base.Channel.deletescheduleAsync(id);
        }
        
        public int updateschedule(System.DateTime starttime, System.DateTime endtime, string category, string id) {
            return base.Channel.updateschedule(starttime, endtime, category, id);
        }
        
        public System.Threading.Tasks.Task<int> updatescheduleAsync(System.DateTime starttime, System.DateTime endtime, string category, string id) {
            return base.Channel.updatescheduleAsync(starttime, endtime, category, id);
        }
    }
}
